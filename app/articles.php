
<?php
require_once "control/config.php";

$lang = $_SESSION['language'] ?? 'en';
require_once "header.php";
?>

<section class="activities mt-5">
    <div class="section-header">
        <h1 class="main-title">
            <?php echo htmlspecialchars($lang == 'en' ? 'Latest ' : 'Derniers '); ?>
            <span class="highlight"><?php echo htmlspecialchars($lang == 'en' ? 'Articles' : 'Articles'); ?></span>
        </h1>
        <p class="section-subtitle">
            <?php echo htmlspecialchars($lang == 'en' ? 'Discover our most recent activities and insights' : 'Découvrez nos activités et perspectives les plus récentes'); ?>
        </p>
    </div>

    <div class="container">
        <!-- Filter and Sort Options -->
        <div class="article-controls">
            <div class="filter-tabs">
                <button class="filter-btn active" data-filter="all"><?php echo htmlspecialchars($lang == 'en' ? 'All' : 'Tous'); ?></button>
                <button class="filter-btn" data-filter="recent"><?php echo htmlspecialchars($lang == 'en' ? 'Recent' : 'Récents'); ?></button>
                <button class="filter-btn" data-filter="popular"><?php echo htmlspecialchars($lang == 'en' ? 'Popular' : 'Populaires'); ?></button>
            </div>
            <div class="view-options">
                <button class="view-btn active" data-view="grid" title="Grid View"><i class="fas fa-th"></i></button>
                <button class="view-btn" data-view="list" title="List View"><i class="fas fa-list"></i></button>
            </div>
        </div>

        <div class="articles-grid" id="articlesContainer">
            <!-- Articles will be loaded here by JavaScript -->
            <div class="loading-spinner"></div>
        </div>

        <!-- Pagination Controls will be generated by JavaScript -->
        <div class="pagination-controls text-center mt-5" id="paginationControls"></div>
    </div>
</section>

<!-- Enhanced Popup Modal -->
<div id="enhancedPopup" class="enhanced-popup">
    <div class="popup-backdrop"></div>
    <div class="popup-container">
        <div class="popup-header">
            <button class="popup-close-btn"><i class="fas fa-times"></i></button>
            <div class="popup-actions">
                <button class="popup-action-btn" id="popupBookmark"><i class="far fa-bookmark"></i></button>
                <button class="popup-action-btn" id="popupShare"><i class="fas fa-share-alt"></i></button>
            </div>
        </div>
        <div class="popup-body">
            <div class="popup-image-section">
                <img id="popupImage" src="" alt="" class="popup-main-image">
                <div class="popup-image-overlay">
                    <div class="popup-category" id="popupCategory"></div>
                </div>
            </div>
            <div class="popup-content-section">
                <div class="popup-meta">
                    <span id="popupDate"></span>
                    <span id="popupReadTime"></span>
                </div>
                <h1 id="popupTitle" class="popup-main-title"></h1>
                <div class="popup-engagement">
                    <button class="popup-engage-btn" id="popupLike"><i class="far fa-heart"></i> <span id="popupLikes">0</span></button>
                    <button class="popup-engage-btn" id="popupCommentBtn"><i class="far fa-comment"></i> <span id="popupCommentCount">0</span></button>
                </div>
                <div id="popupDescription" class="popup-main-content"></div>
                <div class="popup-tags" id="popupTags"></div>
            </div>
        </div>
    </div>
</div>

<!-- Comment Modal -->
<div id="commentModal" class="enhanced-popup">
    <div class="popup-backdrop"></div>
    <div class="popup-container">
        <div class="popup-header">
            <h3 class="modal-title">Comments</h3>
            <button class="popup-close-btn" id="commentModalClose"><i class="fas fa-times"></i></button>
        </div>
        <div class="popup-body">
            <div class="comments-section">
                <h4>Leave a Comment</h4>
                <form id="commentForm" class="comment-form">
                    <input type="hidden" id="commentArticleId" name="article_id">
                    <input type="hidden" id="commentParentId" name="parent_id" value="0">
                    <div class="form-group mb-3"><input type="text" class="form-control" id="commentAuthor" name="author" placeholder="Your Name" required></div>
                    <div class="form-group mb-3"><textarea class="form-control" id="commentText" name="comment" rows="3" placeholder="Your Comment" required></textarea></div>
                    <button type="submit" class="btn btn-primary">Submit Comment</button>
                </form>
                <h4 class="mt-4">All Comments</h4>
                <div id="commentsList" class="comments-list"></div>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function () {
    const articlesContainer = document.getElementById('articlesContainer');
    const paginationControls = document.getElementById('paginationControls');
    const lang = '<?php echo $lang; ?>';

    const renderArticles = (articles) => {
        articlesContainer.innerHTML = '';
        if (!articles || articles.length === 0) {
            articlesContainer.innerHTML = '<div class="no-articles"><?php echo htmlspecialchars($lang == 'en' ? 'No articles found.' : 'Aucun article trouvé.'); ?></div>';
            return;
        }

        articles.forEach(article => {
            const title = lang === 'en' ? article.titleEnglish : article.titleFrench;
            const description = lang === 'en' ? article.descEnglish : article.descFrench;
            const strippedDescription = description.replace(/<[^>]+>/g, '');
            const truncatedDescription = strippedDescription.length > 120 ? strippedDescription.substring(0, 120) + '...' : strippedDescription;
            const readTime = Math.ceil(strippedDescription.length / 200) || 3;
            const viewCount = parseInt(article.views || 0).toLocaleString();
            const publishDate = new Date(article.created_at).toLocaleDateString(lang === 'en' ? 'en-US' : 'fr-FR', { year: 'numeric', month: 'short', day: 'numeric' });
            const tags = article.tags ? article.tags.split(',').slice(0, 2).map(tag => `#${tag.trim()}`).join(' ') : '';
            const likeCount = article.likes || 0;
            const commentCount = article.comment || 0;

            const articleCard = `
                <article class="article-card" data-category="${htmlspecialchars(article.category || 'general')}" data-id="article-${htmlspecialchars(article.id)}">
                    <div class="article-image">
                        <img src="../model/assets/images/activities/${htmlspecialchars(article.image || 'default.jpg')}" alt="${htmlspecialchars(title)}" loading="lazy">
                        <div class="article-overlay">
                            <div class="article-category">${htmlspecialchars(article.category || 'General')}</div>
                        </div>
                    </div>
                    <div class="article-content">
                        <div class="article-meta">
                            <span class="meta-item"><i class="far fa-clock"></i> ${readTime} ${lang === 'en' ? 'min read' : 'min de lecture'}</span>
                            <span class="meta-item"><i class="far fa-eye"></i> ${viewCount} ${lang === 'en' ? 'views' : 'vues'}</span>
                        </div>
                        <h3 class="article-title">${htmlspecialchars(title)}</h3>
                        <p class="article-excerpt">${htmlspecialchars(truncatedDescription)}</p>
                        <div class="article-footer">
                            <div class="article-tags">${htmlspecialchars(tags)}</div>
                            <div class="article-cta">
                                <button class="read-more-btn" data-article='${JSON.stringify(article)}' data-lang="${lang}" data-id="${htmlspecialchars(article.id)}">
                                    ${lang === 'en' ? 'Read More' : 'Lire Plus'} <i class="fas fa-arrow-right"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </article>`;
            articlesContainer.insertAdjacentHTML('beforeend', articleCard);
        });
    };

    const renderPagination = (currentPage, totalPages) => {
        paginationControls.innerHTML = '';
        if (totalPages <= 1) return;

        let paginationHTML = '';
        if (currentPage > 1) {
            paginationHTML += `<a href="#" class="btn btn-primary" data-page="${currentPage - 1}">${htmlspecialchars(lang === 'en' ? 'Previous' : 'Précédent')}</a>`;
        }

        for (let i = 1; i <= totalPages; i++) {
            paginationHTML += `<a href="#" class="btn ${i === currentPage ? 'btn-primary' : 'btn-outline-primary'} mx-1" data-page="${i}">${i}</a>`;
        }

        if (currentPage < totalPages) {
            paginationHTML += `<a href="#" class="btn btn-primary" data-page="${currentPage + 1}">${htmlspecialchars(lang === 'en' ? 'Next' : 'Suivant')}</a>`;
        }
        
        paginationControls.innerHTML = paginationHTML;
    };

    let isLoading = false;
    const loadArticles = async (page = 1) => {
        if (isLoading) return;
        isLoading = true;
        articlesContainer.innerHTML = '<div class="loading-spinner"></div>';
        paginationControls.innerHTML = '';

        // Scroll to the top of the articles container
        articlesContainer.scrollIntoView({ behavior: 'smooth' });

        try {
            const response = await fetch(`control/get-paginated-articles.php?page=${page}`);
            
            if (!response.ok) {
                const errorText = await response.text();
                throw new Error(`HTTP error! status: ${response.status}, response: ${errorText}`);
            }

            const data = await response.json();

            if (data.error) {
                throw new Error(`Server error: ${data.message}`);
            }

            renderArticles(data.articles);
            renderPagination(data.currentPage, data.totalPages);

        } catch (error) {
            console.error('Failed to load articles:', error);
            articlesContainer.innerHTML = `<div class="no-articles error"><strong>Error:</strong> ${error.message}</div>`;
        } finally {
            isLoading = false;
        }
    };

    paginationControls.addEventListener('click', function (e) {
        e.preventDefault();
        const target = e.target.closest('a');
        if (target && target.dataset.page) {
            const page = parseInt(target.dataset.page);
            loadArticles(page);
        }
    });

    function htmlspecialchars(str) {
        if (typeof str !== 'string') {
            return '';
        }
        const map = {
            '&': '&amp;', '<': '&lt;', '>': '&gt;', '"': '&quot;', "'": '&#039;'
        };
        return str.replace(/[&<>"']/g, m => map[m]);
    }

    // Initial Load
    loadArticles(1);
});
</script>

<?php require_once "footer.php"; ?>